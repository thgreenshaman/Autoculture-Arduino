#!/bin/bash

URL='http://autogrow.local'
Vars()
{
    TEMP=$(curl -s "$URL/temp")
    HUM=$(curl -s "$URL/hum")
    LS=$(curl -s "$URL/lightstate")
    FS=$(curl -s "$URL/fanstate")
    HS=$(curl -s "$URL/heatpadstate")
    PS=$(curl -s "$URL/peltierstate")
    TIME=$(curl -s "$URL/unotime")
}

NC='\033[0m'
GREEN='\033[0;32m'
RED='\033[0;31m'
ON='ON'
OFF='OFF'

Help()
{
   echo "  /---------------------------------------\\"
   echo -e "  |\t   ${GREEN}->AUTOGROW Cli:Help${NC}\t\t  |"
   echo "  \\---------------------------------------/"
   echo
   echo -e "The Autogrow Cli program is designed for retrieving"
   echo -e "data from an Autogrow-Arduino v0.01 unit attached"
   echo -e "to the local network. Autogrow-Arduino should be"
   echo -e "available on url autogrow.local although specifying"
   echo -e "the IP address will make the script run faster (by"
   echo -e "a LOT!)"
   echo -e "\tSyntax: autogrow [-p <ip address> -option]"
   echo
   echo -e "\toptions:"
   echo
   echo -e "    h     Print this help screen."
   echo -e "    p     IP address of AUTOGROW arduino unit."
   echo -e "    T     Print the current temperature."
   echo -e "    H     Print the current humidity."
   echo -e "    l     Print light state."
   echo -e "    f     Print fan state."
   echo -e "    w     Print heating state."
   echo -e "    c     Print cooling state."
   echo -e "    d     Live update display."
   echo
}

Color()
{
	if [[ $1 == 'ON' ]]; then
             echo -e "${GREEN}$1${NC}"
         else
             echo -e "${RED}$1${NC}"
    fi
}

Ag()
{
    echo
    echo -e " /--------------------------------------\\"
    echo -e " |         ${GREEN}->AUTOGROW Arduino Cli${NC}       |"
    echo -e " |--------------------------------------|"
    echo -e " |\t\t  $TIME\t\t\t|"
    echo -e " |--------------------------------------|"
    echo -e " |\t Temperature:\t$TEMP°C\t\t|"
    echo -e " |\t Humidity:\t$HUM%\t\t|"
    echo -e " |\t Lights:\t$( Color $LS )\t\t|"
    echo -e " |\t Fan:\t\t$( Color $FS )\t\t|"
    echo -e " |\t Heating:\t$( Color $HS )\t\t|"
    echo -e " |\t Cooling:\t$( Color $PS )\t\t|"
    echo -e " \\--------------------------------------/"
}

Fan()
{
    echo -e "Lights:\t\t$(Color $FS)"
}
Lights()
{
	echo -e "Lights:\t\t$(Color $LS)"
}
Heating()
{
	echo -e "Heating:\t$(Color $HS)"
}
Cooling()
{
	echo -e "Lights:\t\t$(Color $PS)"
}

Dyn()
{
while true; do
  Vars
  out="$(Ag)"
  clear
  echo "$out"
  sleep 1
done
}

while getopts 'hTHALFCWalfcwdp:' option; do
   case $option in
      p) URL=${OPTARG}
      ;;
      h) Help
         exit;;
      T) Vars; echo -e "Tempterature:\t$TEMP°c"
         exit;;
      H) Vars; echo -e "Humidity:\t$HUM%"
         exit;;
      L) Vars; Lights
         exit;;
      l) Vars; Lights
         exit;;
      F) Vars; Fan
         exit;;
      f) Vars; Fan
         exit;;
      W) Vars; Heating
         exit;;
      w) Vars; Heating
         exit;;
      C) Vars; Cooling
         exit;;
      c) Vars; Cooling
         exit;;
      d) Dyn
         ;;
     \?) echo "Error: Invalid option"
         exit 1;;
   esac
done

Ag
